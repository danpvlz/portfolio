---
import { routes } from "./routes";
import MenuMobile from "./MenuMobile";
import { Image } from "astro:assets";
import myImage from "../assets/daniela.png";
import ThemeToggle from "./ThemeToggle";
---

<header
  transition:persist
  class={`font-normal dark:font-light overflow-hidden transition-all duration-[250ms] ease-in-out w-full flex justify-between max-w-7xl px-7 static mt-5 md:mt-0 md:fixed z-50 bg-creame dark:bg-black bg-opacity-50 md:backdrop-blur-xl rounded-full top-2 `}
>
  <a
    id="name-and-picture"
    href="/"
    class="flex items-center justify-center align-middle gap-3"
  >
    <Image
      src={myImage}
      alt="Daniela profile picture"
      class="rounded-full border-2 w-9 aspect-square border-slate-400 bg-black"
    />
    <p>Daniela Paiva</p>
  </a>
  <div class="flex gap-9 md:gap-4 items-center">
    <ThemeToggle client:only />
    <MenuMobile client:only />
    <nav class="hidden md:block">
      <ul class="flex flex-col md:flex-row gap-2 relative">
        {
          routes.map((route) => (
            <li class="py-4 px-4 relative">
              <a
                href={route.link}
                class={
                  "opacity-60 transition-all duration-[250ms] after:transition-all after:duration-[250ms] hover:text-primary hover:opacity-100 after:absolute after:inset-0 after:border-b-2 after:border-primary after:m-auto after:w-1 after:opacity-0 hover:after:opacity-100 hover:after:w-full hover:after:visible after:invisible"
                }
              >
                {route.name}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>
<script>
  const selectRoute = (route: string) => {
    const allMenus = document.querySelectorAll(`nav a`);
    allMenus.forEach((m) => {
      if (m?.getAttribute("href") === route) {
        m.classList.remove("opacity-60");
        m.classList.add("opacity-100");
        return;
      }
      m.classList.add("opacity-60");
    });
  };

  const loadObservers = () => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const intersecting = entry.isIntersecting;
          if (intersecting) {
            selectRoute(
              entry.target.id === "/" ? "/#home" : `/#${entry.target.id}`
            );
          }
        });
      },
      { threshold: [0.3], rootMargin: "50px" }
    );
    const sections = document.querySelectorAll("section");
    sections.forEach((section) => observer.observe(section));
  };

  window.addEventListener("load", loadObservers);
</script>
